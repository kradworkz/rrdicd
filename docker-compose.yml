version: '3'
services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: rrdicom-php7.3
    container_name: rrdicom-app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
       - ./:/var/www
       - ./dockerize/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    ports: 
      - "9001:9000"
    networks:
      - rrdicom-app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: rrdicom-webserver
    restart: unless-stopped
    tty: true
    ports:
      - "81:80"
    volumes:
      - ./:/var/www
      - ./dockerize/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - rrdicom-app-network

  #MySQL Service
  db:
    image: mysql:5.7.29
    container_name: rrdicom-db
    restart: unless-stopped
    tty: true
    ports:
      - "33061:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql
      - ./dockerize/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - rrdicom-app-network

#Docker Networks
networks:
  rrdicom-app-network:
    driver: bridge
volumes:
  dbdata:
    driver: local

